bits 16
org 0x7c00

st: xor     ax, ax              ; init
    mov     ds, ax
    mov     ah, 0xa0
    mov     es, ax
    mov     ax, 0x13
    int     0x10

    mov     al, 0xb6            ; snd
    out     0x43, al
    mov     si, notes
    mov     di, durations
    mov     dx, 9               ; len
.p: mov     cl, byte [di]
    inc     di
    lodsw
    out     0x42, al
    mov     al, ah
    out     0x42, al
    in      al, 0x61
    or      al, 3
    out     0x61, al
    mov     ax, 0x8600
    int     0x15
    in      al, 0x61
    and     al, 0xfc
    out     0x61, al
    dec     dx
    jnz     .p

    mov     bp, palette
    rdtsc
    and     ax, 1
    jz      .k
    add     bp, 4               ; 2nd palette
.k: mov     dx, 92              ; center
    mov     cx, 152
.b: mov     bx, 4
    add     bx, ax
.a: test    al, 1
    jnz     .d
    inc     dx
    inc     dx
.d: dec     dx
    mov     si, frame_3
    call    dr
    call    dr
    call    dr
    dec     bx
    jnz     .a
    mov     bx, 16
.c: mov     si, frame_0
    call    dr
    dec     bx
    jnz     .c
    push    dx
    rdtsc
    and     ax, 15
    pop     dx
    jmp     .b

dr: inc     cx
    pusha
    mov     ax, 320
    mul     dx
    add     ax, cx
    mov     di, ax
    mov     cx, 16
    xor     dl, dl
    sub     di, 320
.a: mov     byte [es:di], dl    ; clear above
    inc     di
    loop    .a
    add     di, 320 - 16
.b: dec     di
    mov     byte [es:di], dl    ; clear left
    inc     di
.c: lodsb
.d: rol     al, 2
    mov     bl, al
    and     bx, 3
    add     bx, bp
    mov     dl, byte [bx]
    mov     byte [es:di], dl
    inc     di
    inc     cx
    test    cl, 3
    jnz     .d
    test    cl, 15
    jnz     .c
    xor     dl, dl
    mov     byte [es:di], dl    ; clear right
    add     di, 320 - 16        ; next row
    test    cx, 0xff
    jnz     .b
    shr     cx, 4
    xor     al, al
    rep     stosb               ; clear below
    inc     cx
    mov     ax, 0x8600
    int     0x15
    popa
    add     si, 64
    ret

notes       dw  3619, 3619,  1, 3619, 4560, 3619, 3043, 1, 6087,
durations   db     2,    2,  1,    4,    2,    4,    4, 4,    4,

palette     db 0x00,0x28,0x2b,0x44  ; mario
            db 0x00,0x0f,0x02,0x2b  ; luigi

frame_3:
db 0x00, 0x15, 0x50, 0x00,
db 0x00, 0x55, 0x55, 0x40,
db 0x00, 0xab, 0xec, 0x00,
db 0x02, 0xef, 0xef, 0xc0,
db 0x02, 0xeb, 0xfb, 0xf0,
db 0x02, 0xbf, 0xea, 0x80,
db 0x00, 0x3f, 0xff, 0x00,
db 0x0a, 0xa5, 0xa0, 0x00,
db 0xfa, 0xa5, 0x6a, 0xfc,
db 0xfc, 0xa7, 0x56, 0xbc,
db 0xf0, 0x55, 0x54, 0x20,
db 0x01, 0x55, 0x55, 0xa0,
db 0x05, 0x55, 0x55, 0xa0,
db 0x29, 0x50, 0x15, 0xa0,
db 0x2a, 0x00, 0x00, 0x00,
db 0x0a, 0x80, 0x00, 0x00,

frame_2:
db 0x00, 0x15, 0x50, 0x00,
db 0x00, 0x55, 0x55, 0x40,
db 0x00, 0xab, 0xec, 0x00,
db 0x02, 0xef, 0xef, 0xc0,
db 0x02, 0xeb, 0xfb, 0xf0,
db 0x02, 0xbf, 0xea, 0x80,
db 0x00, 0x3f, 0xff, 0x00,
db 0x00, 0xa6, 0xa0, 0x00,
db 0x02, 0xa9, 0x68, 0x00,
db 0x02, 0xa5, 0xd7, 0x00,
db 0x02, 0xa9, 0x55, 0x00,
db 0x01, 0xaf, 0xd5, 0x00,
db 0x00, 0x6f, 0x54, 0x00,
db 0x00, 0x15, 0xa8, 0x00,
db 0x00, 0x2a, 0xaa, 0x00,
db 0x00, 0x2a, 0x80, 0x00,

frame_1:
db 0x00, 0x00, 0x00, 0x00,
db 0x00, 0x15, 0x50, 0x00,
db 0x00, 0x55, 0x55, 0x40,
db 0x00, 0xab, 0xec, 0x00,
db 0x02, 0xef, 0xef, 0xc0,
db 0x02, 0xeb, 0xfb, 0xf0,
db 0x02, 0xbf, 0xea, 0x80,
db 0x00, 0x3f, 0xff, 0x00,
db 0x00, 0xaa, 0x63, 0x00,
db 0x03, 0xaa, 0xaf, 0xc0,
db 0x0f, 0x6a, 0xaf, 0x00,
db 0x0a, 0x55, 0x54, 0x00,
db 0x09, 0x55, 0x54, 0x00,
db 0x29, 0x51, 0x50, 0x00,
db 0x20, 0x0a, 0x80, 0x00,
db 0x00, 0x0a, 0xa0, 0x00,

frame_0:
db 0x00, 0x15, 0x50, 0x00,
db 0x00, 0x55, 0x55, 0x40,
db 0x00, 0xab, 0xec, 0x00,
db 0x02, 0xef, 0xef, 0xc0,
db 0x02, 0xeb, 0xfb, 0xf0,
db 0x02, 0xbf, 0xea, 0x80,
db 0x00, 0x3f, 0xff, 0x00,
db 0x00, 0xa6, 0xa0, 0x00,
db 0x02, 0xa6, 0x9a, 0x80,
db 0x0a, 0xa5, 0x5a, 0xa0,
db 0x0f, 0x9d, 0x76, 0xf0,
db 0x0f, 0xd5, 0x57, 0xf0,
db 0x0f, 0x55, 0x55, 0xf0,
db 0x00, 0x54, 0x15, 0x00,
db 0x02, 0xa0, 0x0a, 0x80,
db 0x0a, 0xa0, 0x0a, 0xa0,

times 510 - ($ - $$) db 0
db 0x55, 0xaa
